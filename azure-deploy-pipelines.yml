name: $(Rev:rrr) # This is not used since we define it during the first stage

pr: none

trigger: none

resources:
  pipelines:
    # Name of the pipeline resource inside this workflow. Used to reference the pipeline resources later on (e.g. download artifacts).
  - pipeline: package_build
    # Name of the pipeline in Azure Pipelines
    source: 'CarsAPI-Build Pipeline'
    trigger: true

parameters:
- name: loggingLevel
  displayName: Logging Level
  type: string
  default: Pipeline
  values:
  - Pipeline
  - Debug

variables:
- template: ./deploy/variables/environments/environment-shared.yaml
- template: ./deploy/variables/release-information.yaml
- template: ./deploy/variables/apps/app-shared.yaml
- name: Pipeline.Version
  value: $(Artifact.Version)-$(Build.BuildNumber) 
- name: Artifact.Version
  value: $(resources.pipeline.package_build.runName)

pool:
  vmImage: 'ubuntu-latest'

stages: 
- stage: preparation
  displayName: 'Prepare Deployment'
  jobs:
    - job: version
      displayName: Determine Version
      steps:
      - powershell: |
          Write-Host "##vso[build.updatebuildnumber]$(Pipeline.Version)"
          Write-Host "Pipeline version is '$(Pipeline.Version)'"
        displayName: 'Change pipeline version $(Pipeline.Version)'

- stage: deploy_dev
  displayName: 'Deploy to DEV'
  dependsOn: preparation
  variables:
    - template: ./deploy/variables/environments/environment-dev.yaml
    - template: ./deploy/variables/apps/app-dev.yaml        

  jobs:
  - deployment: deploy_to_dev
    displayName: 'Deploy Web App to DEV'
    environment: Dev
    strategy:
      runOnce:
        deploy:
          steps:    
          - download: package_build
            artifact: 'armTemplates'
            displayName: Download ARM Templates
          - template: ./deploy/templates/deploy-arm-template.yaml
            parameters:
              azureResourceManagerConnection: $(Azure.ServiceConnection.Name)
              subscriptionId: $(Azure.Subscription.Id)
              resourceGroupName: $(Azure.ResourceGroup.Name)
              location: $(Azure.ResourceGroup.Location)
              loggingLevel: ${{ parameters.loggingLevel }}
              
  - deployment: deploy_sql_dev
    displayName: 'Exeucte SQL Migration to DEV'
    environment: Dev
    dependsOn: deploy_to_dev
    strategy:
      runOnce:
        deploy:
          steps:
            - download: package_build
              artifact: 'sqlMigrations'
            - template: './deploy/templates/deploy-sql-migration-template.yaml'
              parameters:                
                azureSubscription: $(Azure.ServiceConnection.Name)
                subscriptionId: $(Azure.Subscription.Id)
                DatabaseName:  $(SQL.Database.Name)                                                         