{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "hostingPlanName": {
        "type": "string",
        "minLength": 1
      },
      "skuName": {
        "type": "string"
      },
      
      "skuCapacity": {
        "type": "int",
        "defaultValue": 1,
        "minValue": 1,
        "metadata": {
          "description": "Describes plan's instance count"
        }
      },
      "administratorLogin": {
        "type": "string"
      },
      "administratorLoginPassword": {
        "type": "securestring"
      },
      "databaseName": {
        "type": "string"
      },
      "collation": {
        "type": "string",
        "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
      },
      "edition": {
        "type": "string",
        "defaultValue": "Basic",
        "allowedValues": [
          "Basic",
          "Standard",
          "Premium"
        ]
      },
      "maxSizeBytes": {
        "type": "string",
        "defaultValue": "1073741824"
      },
      "requestedServiceObjectiveName": {
        "type": "string",
        "defaultValue": "Basic",
        "allowedValues": [
          "Basic",
          "S0",
          "S1",
          "S2",
          "P1",
          "P2",
          "P3"
        ],
        "metadata": {
          "description": "Describes the performance level for Edition"
        }
      },
      "sacarsapiType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_ZRS",
          "Standard_GRS",
          "Standard_RAGRS",
          "Premium_LRS"
        ]
      }
    },
    "variables": {
      "webSiteName": "at-webapp-carsapi-dev",
      "sqlserverName": "at-sql-carsapi-dev",
      "sacarsapiName": "[concat('sacarsapi', uniqueString(resourceGroup().id))]",
      "sqldbLocation": "Norway East"
    },
    "resources": [
      {
        "name": "[variables('sqlserverName')]",
        "type": "Microsoft.Sql/servers",
        "location": "[variables('sqldbLocation')]",
        "tags": {
          "displayName": "SqlServer"
        },
        "apiVersion": "2014-04-01-preview",
        "properties": {
          "administratorLogin": "[parameters('administratorLogin')]",
          "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
        },
        "resources": [
          {
            "name": "[parameters('databaseName')]",
            "type": "databases",
            "location": "[variables('sqldbLocation')]",
            "tags": {
              "displayName": "Database"
            },
            "apiVersion": "2014-04-01-preview",
            "dependsOn": [
              "[resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))]"
            ],
            "properties": {
              "edition": "[parameters('edition')]",
              "collation": "[parameters('collation')]",
              "maxSizeBytes": "[parameters('maxSizeBytes')]",
              "requestedServiceObjectiveName": "[parameters('requestedServiceObjectiveName')]"
            }
          },
          {
            "type": "firewallrules",
            "apiVersion": "2014-04-01-preview",
            "dependsOn": [
              "[resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))]"
            ],
            "location": "[variables('sqldbLocation')]",
            "name": "AllowAllWindowsAzureIps",
            "properties": {
              "endIpAddress": "0.0.0.0",
              "startIpAddress": "0.0.0.0"
            }
          }
        ]
      },
      {
        "apiVersion": "2015-08-01",
        "name": "[parameters('hostingPlanName')]",      
        "type": "Microsoft.Web/serverfarms",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "HostingPlan"
        },
        "sku": {
          "name": "[parameters('skuName')]",
          "capacity": "[parameters('skuCapacity')]"
        },
        "properties": {
          "name": "[parameters('hostingPlanName')]",
          "maximumNumberOfWorkers": 1
        }
      },
      {
        "apiVersion": "2015-08-01",
        "name": "[variables('webSiteName')]",
        "type": "Microsoft.Web/sites",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]"
        ],
        "tags": {
          "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "empty",
          "displayName": "Website"
        },
        "properties": {
          "name": "[variables('webSiteName')]",
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
        },
        "resources": [
          {
            "apiVersion": "2015-08-01",
            "type": "config",
            "name": "connectionstrings",
            "dependsOn": [
              "[resourceId('Microsoft.Web/Sites/', variables('webSiteName'))]"
            ],
            "properties": {
              "DefaultConnection": {
                "value": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('administratorLogin'), '@', variables('sqlserverName'), ';Password=', parameters('administratorLoginPassword'), ';')]",
                "type": "SQLServer"
              }
            }
          }
        ]
      },
      {
        "apiVersion": "2014-04-01",
        "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
        "type": "Microsoft.Insights/autoscalesettings",
        "location": "[resourceGroup().location]",
        "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
          "displayName": "AutoScaleSettings"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
        ],
        "properties": {
          "profiles": [
            {
              "name": "Default",
              "capacity": {
                "minimum": 1,
                "maximum": 2,
                "default": 1
              },
              "rules": [
                {
                  "metricTrigger": {
                    "metricName": "CpuPercentage",
                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT10M",
                    "timeAggregation": "Average",
                    "operator": "GreaterThan",
                    "threshold": 80.0
                  },
                  "scaleAction": {
                    "direction": "Increase",
                    "type": "ChangeCount",
                    "value": 1,
                    "cooldown": "PT10M"
                  }
                },
                {
                  "metricTrigger": {
                    "metricName": "CpuPercentage",
                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT1H",
                    "timeAggregation": "Average",
                    "operator": "LessThan",
                    "threshold": 60.0
                  },
                  "scaleAction": {
                    "direction": "Decrease",
                    "type": "ChangeCount",
                    "value": 1,
                    "cooldown": "PT1H"
                  }
                }
              ]
            }
          ],
          "enabled": false,
          "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
          "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
        }
      },
      {
        "apiVersion": "2014-04-01",
        "name": "[variables('webSiteName')]",
        "type": "Microsoft.Insights/components",
        "location": "West Europe",
        "dependsOn": [
          "[resourceId('Microsoft.Web/sites/', variables('webSiteName'))]"
        ],
        "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
          "displayName": "AppInsightsComponent"
        },
        "properties": {
          "ApplicationId": "[variables('webSiteName')]"
        }
      },
      {
        "name": "[variables('sacarsapiName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-01-01",
        "sku": {
          "name": "[parameters('sacarsapiType')]"
        },
        "dependsOn": [ ],
        "tags": {
          "displayName": "sacarsapi"
        },
        "kind": "Storage"
      }
    ]
  }