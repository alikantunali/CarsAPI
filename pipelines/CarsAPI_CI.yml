# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
- group: Azure.Infrastructure

stages:

- stage: Publish_ARM_Templates
  displayName: Publish ARM Templates

  jobs:
  - job: Publish_ARM_Templates
    displayName: Publish ARM Templates

    steps:
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(ARM.Template.WD)
        artifactName: Templates


- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImage.Name)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(Working.Directory)/$(WebAPI.Name)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release
    #- task: DotNetCoreCLI@2
    #  inputs:
    #    command: test
    #    projects: '**/*Tests/*.csproj'
    #    arguments: '--configuration Release'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(WebAPI.Name)_$(Build.BuildId).zip
        replaceExistingArchive: true   
        
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)/$(WebAPI.Name)_$(Build.BuildId).zip 
        artifactName: carsapifa   

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(Working.Directory)/$(Reference.Project.Name)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release              

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Reference.Project.Name)_$(Build.BuildId).zip
        replaceExistingArchive: true        

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)/$(Reference.Project.Name)_$(Build.BuildId).zip 
        artifactName: commonfa            