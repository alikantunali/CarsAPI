# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master


variables:
  buildConfiguration: 'Release'

stages: 

- stage: Publish_ARM_Template
  displayName: Publish ARM Templates

  jobs:
  - job: Publish_ARM_Templates
    displayName: Publish ARM Templates
    steps:
    # Copy ARM Templates to Artifact Staging
    - task: CopyFiles@2
      displayName: Copy ARM templates to Artifact Staging
      inputs:
        SourceFolder: 'templates'
        Contents: '*.json'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/arm'
        CleanTargetFolder: true    

    #Publish ARM Templates to Artifact folder on Pipeline
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Copied Templates to Pipeline'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/arm'
        artifact: 'armTemplates'
        publishLocation: pipeline

- stage: Build
  displayName: Build Stage

  jobs:
  - job: Build_Job
    displayName: Build Job
    pool:
     vmImage: windows-2022

  
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Build $(buildConfiguration)'
      inputs:
        command: 'build'
        workingDirectory: 'src/'
        projects: '**/*.csproj'
        configuration: $(buildConfiguration)

    - task: DotNetCoreCLI@2
      displayName: Publish Build to SourceZip folder
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/sourceZips/'
        workingDirectory: 'src/'        

        # Publish Project Zip Folders
    - task: PublishBuildArtifacts@1
      displayName: Publish Project Zip Folders
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'ProjectFolder'
        publishLocation: 'Container'
        
- stage: Unit Test
  displayName: Unit Test Stage
  jobs:
  - job: Test_Job
    displayName: Test Job
    
    steps:
      - task: DotNetCoreCLI@2
        displayName: Unit Testing 
        inputs:
          command: 'test'
          projects: '**/*.csproj'
          configuration: $(buildConfiguration)
          testRunTitle: 'project tests run'
          workingDirectory: 'test/'









    